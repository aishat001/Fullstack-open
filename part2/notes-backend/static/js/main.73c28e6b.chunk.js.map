{"version":3,"sources":["component/note/Note.js","services/notes.js","component/notification/Notification.js","component/footer/Footer.js","services/login.js","component/LoginForm.js","component/Togglable.js","component/NoteForm.js","App.js","index.js"],"names":["Note","note","toggleImportance","deleteNote","label","important","className","content","onClick","baseUrl","token","exportObject","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","remove","delete","Notification","errorMessage","setErrorMessage","info","setInfo","useEffect","timer","setTimeout","clearTimeout","Footer","login","credentials","LoginForm","handleLogin","username","password","setUsername","setPassword","onSubmit","type","name","value","onChange","target","Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","children","NoteForm","createNote","newNote","setNewNote","e","preventDefault","date","Date","toISOString","Math","random","event","console","log","App","notes","setNotes","showAll","setShowAll","user","setUser","noteService","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","addNote","noteObject","noteFormRef","current","returnedNote","concat","allNotes","filter","error","notesToShow","loginService","setItem","stringify","useRef","clear","map","find","n","changedNote","catch","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73c28e6b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance, deleteNote }) => {\r\n  const label = note.important ? 'make not important' : 'make important';\r\n  return (\r\n    <li className=\"note\">{note.content}\r\n    <button onClick={toggleImportance}>{label}</button>\r\n    <button onClick={deleteNote}>delete</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note;","  \r\nimport axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n    const config = {\r\n      headers: { Authorization: token },\r\n    }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = async (id) => {\r\n  const response = await axios.delete(`${baseUrl}/${id}`)\r\n  return response.data\r\n}\r\n\r\n// eslint-disable-next-line\r\n\r\nconst exportObject = { \r\n  getAll, create, update, setToken, remove\r\n};\r\nexport default exportObject;","import { useEffect } from \"react\";\r\n\r\nconst Notification = ({errorMessage, setErrorMessage, info, setInfo}) => {\r\n    \r\n    useEffect(() => {\r\n        if (errorMessage || info) {\r\n            const timer = setTimeout(() => {\r\n                setErrorMessage(null);\r\n                setInfo(null)\r\n            }, 5000);\r\n            return () => clearTimeout(timer)\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [errorMessage, info]);\r\n\r\n    return ( \r\n        errorMessage ?\r\n        <div className=\"error\">{errorMessage} </div>\r\n    : info ?\r\n    <div className=\"info\">{info} </div>\r\n        :\r\n        null\r\n     );\r\n}\r\n \r\nexport default Notification;","const Footer = () => {\r\n    return ( \r\n        <div className=\"footer\">\r\n            <h2>Note app... Fullstackpen 2021</h2>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Footer;","import axios from \"axios\";\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { login }","import React from 'react'\r\n\r\nconst LoginForm = ({handleLogin, username, password, setUsername, setPassword}) => {\r\n\r\n    return ( \r\n            <div>\r\n                <form onSubmit={handleLogin}>\r\n                    <div>\r\n                    username\r\n                    <input type=\"text\" name=\"username\" value={username} \r\n                    onChange={({target}) => setUsername(target.value)}/>\r\n                    </div>\r\n                    <div>\r\n                    password\r\n                    <input type=\"password\" name=\"password\" value={password} \r\n                    onChange={({target}) => setPassword(target.value)}/>\r\n                    </div>\r\n                    <button type=\"submit\">login</button>\r\n                </form>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default LoginForm;","import React, { useState, useImperativeHandle } from 'react'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Togglable","import { useState } from \"react\"\r\n\r\nconst NoteForm = ({createNote}) => {\r\n    const [newNote, setNewNote] = useState('')\r\n    \r\n    const handleNoteChange = (event) => {\r\n        console.log(event.target.value)\r\n        setNewNote(event.target.value)\r\n      }\r\n\r\n      const addNote = (e) => {\r\n          e.preventDefault();\r\n          createNote({\r\n            content: newNote,\r\n            date: new Date().toISOString(),\r\n            important: Math.random() > 0.5,\r\n          })\r\n          setNewNote('')\r\n\r\n      }\r\n\r\n    return ( \r\n        <div>\r\n        <form onSubmit={addNote}>\r\n          <input\r\n            value={newNote}\r\n            onChange={handleNoteChange}\r\n            />\r\n          <button type=\"submit\">save</button>\r\n        </form>  \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default NoteForm;","import React, { useState, useEffect, useRef } from 'react'\nimport Note from './component/note/Note'\nimport noteService from './services/notes'\nimport './App.css'\nimport Notification from './component/notification/Notification'\nimport Footer from './component/footer/Footer'\nimport loginService from './services/login'\nimport LoginForm from './component/LoginForm'\nimport Togglable from './component/Togglable'\nimport NoteForm from './component/NoteForm'\n\n\n  const App = () => {\n    const [notes, setNotes] = useState([])\n    const [showAll, setShowAll] = useState(false)\n    const [username, setUsername] = useState('azeez');\n    const [password, setPassword] = useState('mypassword');\n    const [user, setUser] = useState(null);\n    const [info, setInfo] = useState();\n    const [errorMessage, setErrorMessage] = useState(null)\n\n\n\n    useEffect(() => {\n      noteService\n        .getAll()\n        .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n    }, [])\n\n    useEffect(() => {\n      const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n      if (loggedUserJSON) {\n        const user = JSON.parse(loggedUserJSON)\n        setUser(user)\n        noteService.setToken(user.token)\n      }\n    }, [])  \n  \n    const addNote = (noteObject) => {  \n      noteFormRef.current.toggleVisibility()\n      noteService\n        .create(noteObject)\n          .then(returnedNote => {\n          setNotes(notes.concat(returnedNote))\n        })\n        setInfo('A new note is created')\n    }\n    \n    const deleteNote = async (id) => {\n      try {\n        const allNotes = [...notes]\n        await noteService.remove(id)\n        setNotes(allNotes.filter((note) => note.id !== id))\n        setInfo('Note deleted successfully')\n      }catch(error) {\n        console.log({ error })\n        setErrorMessage(error.response.data.error, 'error')\n      }\n    }\n\n    const toggleImportanceOf = id => {\n      const note = notes.find(n => n.id === id)\n      const changedNote = { ...note, important: !note.important }\n    \n      noteService\n      .update(id, changedNote).then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `the note '${note.content}' was already deleted from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000);\n        setNotes(notes.filter(n => n.id !== id))\n      })    \n    }\n \n    const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n    const handleLogin = async (e) => {\n      e.preventDefault()\n \n      try {\n        const user = await loginService.login({\n          username,\n          password\n        })\n        console.log('logging in with', username, password, user)\n\n        // noteService.setToken(user.token)\n        window.localStorage.setItem(\n          'loggedNoteappUser', JSON.stringify(user)\n        ) \n        setUser(user)\n        setUsername('')\n        setPassword('')\n\n      } catch (exception) {\n        setErrorMessage('wrong credentials')\n      }\n    }\n    const handleLogout = () => {\n      setUser(null)\n      localStorage.clear()\n    }\n    const loginForm = ( ) => (\n      <Togglable buttonLabel=\"log in\">\n          <LoginForm \n          handleLogin={handleLogin}\n          username={username}\n          password={password}\n          setUsername={setUsername}\n          setPassword={setPassword} />\n      </Togglable>\n    )\n\n    const noteFormRef = useRef()\n\n      const noteForm = () => (\n        <Togglable buttonLabel=\"add note\" ref={noteFormRef}>\n            <NoteForm createNote={addNote}/>\n          </Togglable>\n        )\n\n    return (\n      <div className='App'>\n        <h1>Notes</h1>\n        <Notification errorMessage={errorMessage}\n         setInfo={setInfo}\n         info={info}\n         setErrorMessage={setErrorMessage}/>\n\n        {user === null ? \n        <div>\n          {loginForm()}\n          </div>\n         :\n          <div>\n           <p>{user.name} logged-in</p>\n           <button onClick={handleLogout}>logout</button>\n\n           <ul>\n              {notesToShow.map(note => \n              <Note\n                key={note.id}\n                note={note} \n                toggleImportance={() => toggleImportanceOf(note.id)}\n                deleteNote={() => deleteNote(note.id)}\n                />\n              )}\n            </ul>\n\n           {noteForm()}\n           <div>\n           <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n          </div>\n         }\n\n \n\n        <Footer />\n      </div>\n    )\n  }\n  export default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}